server {
    listen 80;
    server_name localhost;
    
    # 配置 /v6/ 路径指向您的 build 文件夹
    location /v6/ {
        alias /Users/fengliang/GitHub/React_Typescript/build/;
        index index.html index.htm;
        try_files $uri $uri/ /v6/index.html;
    }
    
    # 处理静态资源请求
    location /static/ {
        alias /Users/fengliang/GitHub/React_Typescript/build/static/;
    }
    
    # 处理根目录下的manifest.json、favicon.ico等文件
    location = /manifest.json {
        alias /Users/fengliang/GitHub/React_Typescript/build/manifest.json;
    }
    
    location = /favicon.ico {
        alias /Users/fengliang/GitHub/React_Typescript/build/favicon.ico;
    }
    
    location = /logo192.png {
        alias /Users/fengliang/GitHub/React_Typescript/build/logo192.png;
    }
    
    location = /logo512.png {
        alias /Users/fengliang/GitHub/React_Typescript/build/logo512.png;
    }
    
    # 后端API代理配置，支持CORS
    location /api/ {
        # 修正代理路径，不要添加斜杠
        proxy_pass http://localhost:8000/;
        
        # 基本代理设置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 增加超时设置 - 设置为5分钟
        proxy_connect_timeout 300s;  # 连接超时时间
        proxy_send_timeout 300s;     # 发送超时时间
        proxy_read_timeout 300s;     # 读取超时时间
        
        # CORS 配置 - 使用通配符以便于测试
        add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;  # 临时注释掉，测试通配符
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
        
        # 预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Credentials' 'true';  # 临时注释掉，测试通配符
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # 错误页配置
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 